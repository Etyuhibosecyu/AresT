<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
			 xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
			 xmlns:local="clr-namespace:AresT"
			 x:Class="AresT.MainPage"
			 xmlns:material="http://schemas.enisn-projects.io/dotnet/maui/uraniumui/material">
	<ContentPage.Resources>
		<local:OpacityConverter x:Key="OpacityConverter" />
	</ContentPage.Resources>

	<ScrollView>
		<VerticalStackLayout
			Spacing="8"
			VerticalOptions="Center">

			<Grid
				ColumnSpacing="8"
				HorizontalOptions="Fill"
				RowSpacing="8">
				<Grid.RowDefinitions>
					<RowDefinition Height="40" />
					<RowDefinition Height="40" />
				</Grid.RowDefinitions>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="*" />
				</Grid.ColumnDefinitions>
				<Label
					Text="Supertotal"
					FontSize="24" />
				<ContentView
					BackgroundColor="#FFBFDF"
					Grid.Column="1"
					MinimumHeightRequest="40">
					<ProgressBar
						x:Name="ProgressBarSupertotal"
						MinimumHeightRequest="40"
						Progress="0.36"
						ProgressColor="#BF8080" />
				</ContentView>
				<Label
					Grid.Row="1"
					Text="Total"
					FontSize="24" />
				<ContentView
					BackgroundColor="#BFBFFF"
					Grid.Column="1"
					Grid.Row="1"
					MinimumHeightRequest="40">
					<ProgressBar
						x:Name="ProgressBarTotal"
						MinimumHeightRequest="40"
						Progress="0.64"
						ProgressColor="#8080BF" />
				</ContentView>
			</Grid>

			<Grid
				x:Name="GridThreadsProgressBars"
				HorizontalOptions="Fill"
				RowSpacing="8">
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto" />
					<RowDefinition Height="Auto" />
					<RowDefinition Height="Auto" />
				</Grid.RowDefinitions>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="Auto" />
				</Grid.ColumnDefinitions>
			</Grid>

			<!--<material:TabView x:Name="TabView">
				<material:TabView.TabHeaderItemTemplate>
					<DataTemplate>
						<Button BackgroundColor="#4080BF"  Text="{Binding Title}" FontSize="12" Command="{Binding Command}" />
					</DataTemplate>
				</material:TabView.TabHeaderItemTemplate>
				<material:TabItem x:Name="TabItemImages" Title="Изображения">
					<material:TabItem.ContentTemplate>
						<DataTemplate>
							<Image
								HorizontalOptions="Start"
								Source="under_development.png"
								WidthRequest="256" />
						</DataTemplate>
					</material:TabItem.ContentTemplate>
				</material:TabItem>
				<material:TabItem x:Name="TabItemText" Title="Текст">
					<material:TabItem.ContentTemplate>
						<DataTemplate
							x:Name="TabItemTextData">-->
							<VerticalStackLayout
								x:Name="PanelText"
								HorizontalOptions="Start">
								<Grid
									x:Name="GridCompressionButtons">
									<Grid.RowDefinitions>
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
									</Grid.RowDefinitions>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="Auto" />
									</Grid.ColumnDefinitions>
									<Button
										x:Name="ButtonOpen"
										BackgroundColor="#40BF40"
										Clicked="ButtonOpen_Click"
										Grid.Row="0"
										Text="Открыть"
										FontSize="12" />
									<Button
										x:Name="ButtonOpenForCompression"
										BackgroundColor="#8080BF"
										Clicked="ButtonOpenForCompression_Click"
										Grid.Row="1"
										Text="Открыть для сжатия"
										FontSize="12" />
									<Button
										x:Name="ButtonOpenForUnpacking"
										BackgroundColor="#BF8040"
										Clicked="ButtonOpenForUnpacking_Click"
										Grid.Row="2"
										Text="Открыть для распаковки"
										FontSize="12" />
									<Button
										x:Name="ButtonOpenForRecompression"
										BackgroundColor="#A06040"
										Clicked="ButtonOpenForRecompression_Click"
										Grid.Column="1"
										Grid.Row="1"
										Text="Открыть для пересжатия"
										FontSize="12" />
									<Button
										x:Name="ButtonStop"
										BackgroundColor="#BF4080"
										Clicked="ButtonStop_Click"
										Grid.Column="2"
										Grid.Row="2"
										Text="Остановить"
										FontSize="12" />
								</Grid>

								<Grid
									x:Name="GridSettings">
									<Grid.RowDefinitions>
										<RowDefinition Height="Auto" />
									</Grid.RowDefinitions>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="*" />
									</Grid.ColumnDefinitions>
									<Label
										Text="Быстрая настройка: "
										FontSize="12"
										VerticalOptions="Center" />
									<Picker
										x:Name="PickerQuickSetup"
										SelectedIndexChanged="PickerQuickSetup_SelectedIndexChanged"
										Grid.Column="1">
										<Picker.Items>
											<x:String>Start</x:String>
											<x:String>Optimus</x:String>
											<x:String>Pro</x:String>
											<x:String>Pro+</x:String>
											<x:String>Unlim</x:String>
										</Picker.Items>
										<Picker.SelectedIndex>1</Picker.SelectedIndex>
									</Picker>
								</Grid>

								<Grid>
									<Grid.RowDefinitions>
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
									</Grid.RowDefinitions>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="Auto" />
									</Grid.ColumnDefinitions>
									<material:CheckBox
										x:Name="CheckBoxCS1"
										CheckChanged="CheckBoxCS1_CheckedChanged"
										IsChecked="True"
										Text="C-S1" />
									<VerticalStackLayout
										x:Name="PanelCS1"
										BindingContext="{x:Reference CheckBoxCS1}"
										Grid.Row="1"
										Opacity="{Binding IsChecked, Converter={StaticResource OpacityConverter}, ConverterParameter={Binding IsChecked}, StringFormat='{0:X2}'}">
										<material:CheckBox
											x:Name="CheckBoxLZ1"
											CheckChanged="CheckBoxLZ1_CheckedChanged"
											ToolTipProperties.Text="Лемпель-Зив (LZ) - алгоритм словарного сжатия, кодирующий повторяющиеся группы бит (LZMA), символов или слов. На самом деле Лемпель и Зив - две разные фамилии. В сочетании с Хаффманом является классикой в деле сжатия данных."
											IsChecked="True"
											Text="LZ" />
										<material:CheckBox
											x:Name="CheckBoxHF1"
											CheckChanged="CheckBoxHF1_CheckedChanged"
											ToolTipProperties.Text='Хаффман (Huff, HF) - алгоритм энтропийного сжатия, кодирующий частые элементы короткими кодами, а редкие - длинными. Для HF без специальных обозначений "элементами" являются байты, благодаря чему он быстрый и универсальный, и вместе с Лемпелем-Зивом является классикой в деле сжатия данных, но сжимает часто хуже, чем более специфические алгоритмы.'
											IsChecked="True"
											Text="HF" />
										<material:CheckBox
											x:Name="CheckBoxPSLZ1"
											CheckChanged="CheckBoxPSLZ1_CheckedChanged"
											ToolTipProperties.Text="Пост-скриптумный Лемпель-Зив (PSLZ) - тот же Лемпель-Зив (LZ), только выполняющийся после Хаффмана. В редких случаях может дать бо́льшую степень сжатия. Помните, что и Хаффман, и Лемпель-Зив выполняются один раз - либо в том порядке, либо в другом."
											IsChecked="False"
											Text="PSLZ" />
									</VerticalStackLayout>
									<material:CheckBox
										x:Name="CheckBoxCS2"
										CheckChanged="CheckBoxCS2_CheckedChanged"
										Grid.Column="1"
										IsChecked="True"
										Text="C-S2" />
									<VerticalStackLayout
										x:Name="PanelCS2"
										BindingContext="{x:Reference CheckBoxCS2}"
										Grid.Column="1"
										Grid.Row="1"
										Opacity="{Binding IsChecked, Converter={StaticResource OpacityConverter}, ConverterParameter={Binding IsChecked}, StringFormat='{0:X2}'}">
										<Label
											ToolTipProperties.Text="Хаффман для слов (HFW) - историческое название алгоритма энтропийного сжатия, сжимающего слова на естественном (русском, английском) языке. Историческим оно является потому, что 1 - это не Хаффман, а арифметическое кодирование, и 2 - оно ничем не отличается от такого же для байт, а собственно слова кодирует совсем другая функция, и между ними можно вставить что-то еще, например, Лемпель-Зив."
											Text="  ✓     HFW" />
										<material:CheckBox
											x:Name="CheckBoxLZ2"
											CheckChanged="CheckBoxLZ2_CheckedChanged"
											ToolTipProperties.Text="Лемпель-Зив (LZ) - алгоритм словарного сжатия, кодирующий повторяющиеся группы бит (LZMA), символов или слов. На самом деле Лемпель и Зив - две разные фамилии. В сочетании с Хаффманом является классикой в деле сжатия данных."
											IsChecked="True"
											Text="LZ" />
										<material:CheckBox
											x:Name="CheckBoxSHET2"
											CheckChanged="CheckBoxSHET2_CheckedChanged"
											ToolTipProperties.Text="Stems here, endings there (SHET) - алгоритм, разделяющий основы и окончания, но, кроме этого факта, недосредственно получаемого лингвистическим анализом названия алгоритма, больше о нем ничего не известно."
											BackgroundColor="#FFBFDF"
											IsChecked="False"
											Text="SHET" />
									</VerticalStackLayout>
									<material:CheckBox
										x:Name="CheckBoxCS3"
										CheckChanged="CheckBoxCS3_CheckedChanged"
										Grid.Column="2"
										IsChecked="False"
										Text="C-S3" />
									<VerticalStackLayout
										x:Name="PanelCS3"
										BindingContext="{x:Reference CheckBoxCS3}"
										Grid.Column="2"
										Grid.Row="1"
										Opacity="{Binding IsChecked, Converter={StaticResource OpacityConverter}, ConverterParameter={Binding IsChecked}, StringFormat='{0:X2}'}">
										<Label
											ToolTipProperties.Text='Хаффман (Huff, HF) - алгоритм энтропийного сжатия, кодирующий частые элементы короткими кодами, а редкие - длинными. Для HF без специальных обозначений "элементами" являются байты, благодаря чему он быстрый и универсальный, и вместе с Лемпелем-Зивом является классикой в деле сжатия данных, но сжимает часто хуже, чем более специфические алгоритмы.'
											Text="  ✓     HF" />
										<Label
											ToolTipProperties.Text='Преобразование Барроуза-Уилера (BWT) - это алгоритм, который не только не сжимает, а даже слегка "раздувает" входной поток, да еще и "перетрясает" все его байты в непредсказуемом порядке, но, как ни парадоксально, если результат сжать Хаффманом, можно добиться намного лучшей степени сжатия, чем если применять Хаффман к результату сжатия Лемпелем-Зивом.'
											Text="  ✓     BWT" />
									</VerticalStackLayout>
									<material:CheckBox
										x:Name="CheckBoxCS4"
										CheckChanged="CheckBoxCS4_CheckedChanged"
										Grid.Column="3"
										IsChecked="False"
										Text="C-S4" />
									<VerticalStackLayout
										x:Name="PanelCS4"
										BindingContext="{x:Reference CheckBoxCS4}"
										Grid.Column="3"
										Grid.Row="1"
										Opacity="{Binding IsChecked, Converter={StaticResource OpacityConverter}, ConverterParameter={Binding IsChecked}, StringFormat='{0:X2}'}">
										<Label
											ToolTipProperties.Text="Хаффман для слов (HFW) - историческое название алгоритма энтропийного сжатия, сжимающего слова на естественном (русском, английском) языке. Историческим оно является потому, что 1 - это не Хаффман, а арифметическое кодирование, и 2 - оно ничем не отличается от такого же для байт, а собственно слова кодирует совсем другая функция, и между ними можно вставить что-то еще, например, Лемпель-Зив."
											Text="  ✓     HFW" />
										<Label
											ToolTipProperties.Text='Преобразование Барроуза-Уилера (BWT) - это алгоритм, который не только не сжимает, а даже слегка "раздувает" входной поток, да еще и "перетрясает" все его байты в непредсказуемом порядке, но, как ни парадоксально, если результат сжать Хаффманом, можно добиться намного лучшей степени сжатия, чем если применять Хаффман к результату сжатия Лемпелем-Зивом.'
											Text="  ✓     BWT" />
										<material:CheckBox
											x:Name="CheckBoxSHET4"
											CheckChanged="CheckBoxSHET4_CheckedChanged"
											ToolTipProperties.Text="Stems here, endings there (SHET) - алгоритм, разделяющий основы и окончания, но, кроме этого факта, недосредственно получаемого лингвистическим анализом названия алгоритма, больше о нем ничего не известно."
											BackgroundColor="#FFBFDF"
											IsChecked="False"
											Text="SHET" />
									</VerticalStackLayout>
									<material:CheckBox
										x:Name="CheckBoxCS5"
										CheckChanged="CheckBoxCS5_CheckedChanged"
										Grid.Column="4"
										IsChecked="False"
										Text="C-S5" />
									<VerticalStackLayout
										x:Name="PanelCS5"
										BindingContext="{x:Reference CheckBoxCS5}"
										Grid.Column="4"
										Grid.Row="1"
										Opacity="{Binding IsChecked, Converter={StaticResource OpacityConverter}, ConverterParameter={Binding IsChecked}, StringFormat='{0:X2}'}">
										<Label
											BackgroundColor="#80BFFF"
											ToolTipProperties.Text='LZMA - разновидность Лемпеля-Зива (LZ), применяемая к битам. Одно это уже делает алгоритм в корне отличающимся от "классического" Лемпеля-Зива и по степени сжатия, и по скорости, и по собственно алгоритму. Одно только название осталось от LZ...'
											Text="  ✓     LZMA" />
									</VerticalStackLayout>
									<material:CheckBox
										x:Name="CheckBoxCS6"
										CheckChanged="CheckBoxCS6_CheckedChanged"
										Grid.Column="5"
										IsChecked="False"
										Text="C-S6" />
									<VerticalStackLayout
										x:Name="PanelCS6"
										BindingContext="{x:Reference CheckBoxCS6}"
										Grid.Column="5"
										Grid.Row="1"
										Opacity="{Binding IsChecked, Converter={StaticResource OpacityConverter}, ConverterParameter={Binding IsChecked}, StringFormat='{0:X2}'}">
										<Label
											ToolTipProperties.Text='Предсказание по частичному совпадению (PPM) - алгоритм сжатия текста, обеспечивающий экстремальные степени сжатия, но потребляющий огромное количество (до нескольких тысяч раз от размера файла) оперативной памяти. Суть его заключается в особом энтропийном кодировании, кодирующем не только одиночные элементы, но и их сочетания. Например, Хаффман закодирует английское сочетание "qu" как отдельно "q" и отдельно "u", вероятность встретить которую примерно средняя среди всех букв - например, меньше, чем у "a" - а PPM закодирует эту "u" именно как следующую за "q", где ее вероятность примерно 99.9% (а мы знаем, что чем более вероятный какой-либо элемент, тем короче его энтропийный код).'
											Text="  ✓     PPM" />
									</VerticalStackLayout>
									<material:CheckBox
										x:Name="CheckBoxCS7"
										CheckChanged="CheckBoxCS7_CheckedChanged"
										Grid.Column="6"
										IsChecked="False"
										Text="C-S7" />
									<VerticalStackLayout
										x:Name="PanelCS7"
										BindingContext="{x:Reference CheckBoxCS7}"
										Grid.Column="6"
										Grid.Row="1"
										Opacity="{Binding IsChecked, Converter={StaticResource OpacityConverter}, ConverterParameter={Binding IsChecked}, StringFormat='{0:X2}'}">
										<Label
											ToolTipProperties.Text="PPM для слов (PPMW) - самый эффективный алгоритм сжатия текста из всех. Разбивает на слова, а потом сжимает методом предсказания по частичному совпадению (PPM). Ни один осмысленный текст на естественном языке не устоит перед его натиском!"
											Text="  ✓     PPMW" />
										<material:CheckBox
											x:Name="CheckBoxSHET7"
											CheckChanged="CheckBoxSHET7_CheckedChanged"
											ToolTipProperties.Text="Stems here, endings there (SHET) - алгоритм, разделяющий основы и окончания, но, кроме этого факта, недосредственно получаемого лингвистическим анализом названия алгоритма, больше о нем ничего не известно."
											BackgroundColor="#FFBFDF"
											IsChecked="False"
											Text="SHET" />
									</VerticalStackLayout>
									<material:CheckBox
										x:Name="CheckBoxCS8"
										CheckChanged="CheckBoxCS8_CheckedChanged"
										Grid.Column="7"
										IsChecked="False"
										Text="C-S8" />
									<VerticalStackLayout
										x:Name="PanelCS8"
										BindingContext="{x:Reference CheckBoxCS8}"
										Grid.Column="7"
										Grid.Row="1"
										Opacity="{Binding IsChecked, Converter={StaticResource OpacityConverter}, ConverterParameter={Binding IsChecked}, StringFormat='{0:X2}'}">
										<Label
											BackgroundColor="#80BFFF"
											ToolTipProperties.Text='PPM для бит (PPMB) - поражающий воображение алгоритм сжатия - работает с произвольными данными, сжимает так, что все другие и рядом не стояли, практически моментально восстанавливается после "встряски" резкой сменой типа контента... если вы готовы к скорости меньше 1 МБ/ч и затратам RAM x5000 от размера файла (для сжатия 8 МБ ее потребуется 40 ГБ)!'
											Text="  ✓     PPMB" />
									</VerticalStackLayout>
									<VerticalStackLayout
										x:Name="PanelHFType"
										BindingContext="{x:Reference CheckBoxCS8}"
										Grid.Column="8"
										Grid.Row="0"
										Grid.RowSpan="2">
										<material:RadioButtonGroupView>
											<material:RadioButton
												x:Name="RadioButtonSHF"
												ToolTipProperties.Text='Хаффман (Huff, HF) - алгоритм энтропийного сжатия, кодирующий частые элементы короткими кодами, а редкие - длинными. Для HF без специальных обозначений "элементами" являются байты, благодаря чему он быстрый и универсальный, и вместе с Лемпелем-Зивом является классикой в деле сжатия данных, но сжимает часто хуже, чем более специфические алгоритмы.'
												IsChecked="True"
												Text="SHF" />
											<material:RadioButton
												x:Name="RadioButtonAHF"
												Checked="RadioButtonAHF_CheckedChanged"
												ToolTipProperties.Text="Адаптивный Хаффман (AHF) - алгоритм энтропийного сжатия, похожий на Хаффман (HF), но способный динамически добавлять элементы в кодовую таблицу, начиная с первого, и учитывать их вероятность в текущем контексте, а не во всем файле. В результате этого сжатый текст (AB)¹⁰⁰⁰(CD)¹⁰⁰⁰(EF)¹⁰⁰⁰(GH)¹⁰⁰⁰ (показатель степени обозначает количество повторов) займет намного меньше, чем (8000 * log₂8) бит."
												IsChecked="False"
												Text="AHF" />
										</material:RadioButtonGroupView>
									</VerticalStackLayout>
								</Grid>
							</VerticalStackLayout>
						<!--</DataTemplate>
					</material:TabItem.ContentTemplate>
				</material:TabItem>
				<material:TabItem x:Name="TabItemArchiving" Title="Архивация">
					<material:TabItem.ContentTemplate>
						<DataTemplate>
							<Image
								HorizontalOptions="Start"
								Source="under_development.png"
								WidthRequest="256" />
						</DataTemplate>
					</material:TabItem.ContentTemplate>
				</material:TabItem>
			</material:TabView>-->
		</VerticalStackLayout>
	</ScrollView>

</ContentPage>
